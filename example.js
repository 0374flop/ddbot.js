const { BotManager } = require('./src/bot/index');

async function example() {
    const botManager = new BotManager();

    // –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –±–æ—Ç–∞ —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
    const botName = await botManager.createAndConnectBot(
        '127.0.0.1:8303', 
        'TestBot', 
        { 
            identity: 'test',
            reconnect: true  // –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        }
    );

    if (botName) {
        console.log(`Bot created: ${botName}`);
        
        // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ —Å —Å–æ–±—ã—Ç–∏—è–º–∏
        const bot = botManager.getBot(botName);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        bot.on('connect', () => {
            console.log(`üéâ Bot ${botName} connected to server!`);
        });
        
        bot.on('disconnect', (reason) => {
            console.log(`üò¢ Bot ${botName} disconnected: ${reason}`);
        });
        
        bot.on('message', (msg) => {
            console.log(`üí¨ Bot ${botName} received message:`, msg);
        });
        
        bot.on('error', (error) => {
            console.error(`‚ùå Bot ${botName} error:`, error);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        console.log(`Is connected: ${bot.isConnected()}`);
        
        // –†–∞–±–æ—Ç–∞–µ–º —Å –¥–≤–∏–∂–µ–Ω–∏–µ–º –±–æ—Ç–∞
        const movement = bot.movement;
        if (movement) {
            // –ü—Ä–∏–º–µ—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏–µ–º
            // movement.runLeft();
            // movement.jump();
            // movement.say('Hello from bot!');
            
            // –ü—Ä—è–º–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏–µ–º
            // movement.runLeft();
            // movement.jump(true);
            // movement.setAim(100, 200);
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            // console.log('Is frozen:', movement.isFrozen());
            // console.log('Character state:', movement.getCharacterState());
        }
        
        // –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö)
        // –ú–µ—Ç–æ–¥ reconnect() –±–æ–ª—å—à–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω - –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        // –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏, –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä reconnect: true
        
        // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ
        // await bot.disconnect();
        
        // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –±–æ—Ç–æ–≤
        // await botManager.disconnectAllBots();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä
example().catch(console.error); 